<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
	"http://www.springframework.org/dtd/spring-beans.dtd">

<!-- This file generated by Sakai App Builder -AZ -->
<beans>

    <!-- Bring in the hibernate related beans -->
    <import resource="spring-hibernate.xml" />
    <import resource="sakai-hibernate.xml" />

    <!-- create an external logic bean which abstracts out the Sakai bits -->
    <bean id="com.turningtech.turningtool.logic.ExternalLogic"
        class="com.turningtech.turningtool.logic.ExternalLogicImpl"
        init-method="init">
        <property name="functionManager" ref="org.sakaiproject.authz.api.FunctionManager" />
        <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
        <property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
        <!--<property name="rosterManager" ref="org.sakaiproject.api.app.roster.RosterManager" />-->
        <property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
        <property name="toolManager" ref="org.sakaiproject.tool.api.ToolManager" />
        <property name="authzGroupService" ref="org.sakaiproject.authz.api.AuthzGroupService" />
        <property name="groupProvider" ref="org.sakaiproject.authz.api.GroupProvider" />
        <property name="userDirectoryService"
            ref="org.sakaiproject.user.api.UserDirectoryService" />
        <property name="usageSessionService"
            ref="org.sakaiproject.event.api.UsageSessionService" />
        <property name="eventTrackingService"
            ref="org.sakaiproject.event.api.EventTrackingService" />
        <property name="courseManagementService"
            ref="org.sakaiproject.coursemanagement.api.CourseManagementService"/>
        <property name="gradebookService"
            ref="org_sakaiproject_service_gradebook_GradebookService" />
        <property name="gradebookExternalAssessmentService"
            ref="org_sakaiproject_service_gradebook_GradebookExternalAssessmentService" />
        <property name="schedulerManager"
            ref="org.sakaiproject.api.app.scheduler.SchedulerManager" />
        <!--<property name="memoryService" ref="org.sakaiproject.memory.api.MemoryService" />-->
    </bean>

    <bean id="com.turningtech.turningtool.logic.DeviceIdMappingComparator"
        class="com.turningtech.turningtool.logic.DeviceIdMappingComparatorImpl" />

    <!-- create a logic bean, give it the dao from above -->
    <bean id="com.turningtech.turningtool.logic.TurningToolLogic"
        class="com.turningtech.turningtool.logic.TurningToolLogicImpl"
        init-method="init">
        <property name="siteService" ref="org.sakaiproject.site.api.SiteService" />        
        <property name="dao" 
            ref="com.turningtech.turningtool.dao.TurningToolDao" />
        <property name="externalLogic"
            ref="com.turningtech.turningtool.logic.ExternalLogic" />
        <property name="comparator"
            ref="com.turningtech.turningtool.logic.DeviceIdMappingComparator" />
        <!--<property name="memoryService" ref="org.sakaiproject.memory.api.MemoryService" />-->
    </bean>

    <bean id="com.turningtech.turningtool.logic.AESEncryptionManager"
        class="com.turningtech.turningtool.logic.AESEncryptionManagerImpl">
        <property name="keyFile" value="/turningtool.dev.key"/>
    </bean>

    <bean id="com.turningtech.turningtool.logic.ResponseWarePostManager"
        class="com.turningtech.turningtool.logic.ResponseWarePostManagerImpl">
        <property name="encryptionManager" 
            ref="com.turningtech.turningtool.logic.AESEncryptionManager" />
    </bean>

    <bean id="com.turningtech.turningtool.service.EmailNotificationService"
        class="com.turningtech.turningtool.service.EmailNotificationServiceImpl">
        <property name="externalLogic"
            ref="com.turningtech.turningtool.logic.ExternalLogic" />
    </bean>
<!-- 
    <bean id="com.turningtech.turningtool.logic.RosterModificationObserver"
        class="com.turningtech.turningtool.logic.RosterModificationObserverImpl"
        init-method="init" lazy-init="false">
        <property name="externalLogic"
            ref="com.turningtech.turningtool.logic.ExternalLogic"/>
        <property name="turningToolLogic"
            ref="com.turningtech.turningtool.logic.TurningToolLogic"/>
    </bean>


    <bean id="deviceIdEmailReminder"
        class="com.turningtech.turningtool.jobs.DeviceIdEmailReminder">
        <property name="externalLogic"
            ref="com.turningtech.turningtool.logic.ExternalLogic"/>
    </bean>

    <bean id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.deviceIdEmailReminder"
        class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
        singleton="true" init-method="init">
        <property name="beanId">
            <value>deviceIdEmailReminder</value>
        </property>
        <property name="jobName">
            <value>Device ID Registration Email Reminder Job</value>
        </property>
        <property name="schedulerManager"
            ref="org.sakaiproject.api.app.scheduler.SchedulerManager" />
    </bean>
-->    
    <!-- create an entity provider bean -->
<!--    <bean class="com.turningtech.turningtool.logic.entity.TurningToolEntityProvider">-->
<!--        <property name="logic" ref="com.turningtech.turningtool.logic.TurningToolLogic" />-->
<!--        <property name="developerHelperService" ref="org.sakaiproject.entitybroker.DeveloperHelperService" />-->
<!--    </bean>-->
</beans>
