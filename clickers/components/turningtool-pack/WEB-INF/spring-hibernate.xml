<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
	"http://www.springframework.org/dtd/spring-beans.dtd">

<!-- This file generated by Sakai App Builder -AZ -->
<beans>
	
	<bean id="baseClasses" abstract="true">
      <property name="persistentClasses">
         <list>
            <value>com.turningtech.turningtool.model.DeviceIdMapping</value>
            <value>com.turningtech.turningtool.model.GradeEscrow</value>
         </list>
      </property>
   </bean>
   
    <!-- define the list of HBM mapping files -->
    <bean id="com.turningtech.turningtool.HBMMappingList" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <value>com/turningtech/turningtool/dao/hbm/DeviceIdMapping.hbm.xml</value>
                <value>com/turningtech/turningtool/dao/hbm/GradeEscrow.hbm.xml</value>
                <value>com/turningtech/turningtool/dao/hbm/TtSiteSettings.hbm.xml</value>
            </list>
        </constructor-arg>
    </bean>

    <!-- create a DAO bean, use the hibernate implementation -->
    <bean id="com.turningtech.turningtool.dao.TurningToolDaoTarget"
            class="com.turningtech.turningtool.dao.TurningToolDaoImpl"
            init-method="init" parent="baseClasses">
        <property name="sessionFactory" 
            ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
    
    </bean>

	<!-- This wraps our DAO so that the transactions are managed -->
	<bean id="com.turningtech.turningtool.dao.TurningToolDao"
			class="com.turningtech.turningtool.dao.TurningToolDaoImpl" init-method="init" parent="baseClasses">
        <property name="sessionFactory" 
            ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
    
	</bean>

	<bean id="com.turningtech.turningtool.interceptor.LogicTransactionProxy"
			class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" 
			ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
		<property name="transactionAttributes">
			<props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="count*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

    <!-- bean to wrap DAO and all the logic beans inside the transaction interceptor -->
    <bean
        class="org.sakaiproject.genericdao.springutil.CurrentClassLoaderBeanNameAutoProxyCreator">
        <property name="interceptorNames">
            <list>
                <idref bean="com.turningtech.turningtool.interceptor.LogicTransactionProxy" />
            </list>
        </property>
        <property name="beanNames">
            <list>
                <value>com.turningtech.turningtool.dao.TurningToolDao</value>
            </list>
        </property>
    </bean>

	<!-- create a data preloading bean that has transaction protection -->
	<bean id="com.turningtech.turningtool.dao.PreloadData"
			class="com.turningtech.turningtool.dao.PreloadDataImpl"
			init-method="init">
		<property name="dao"
			ref="com.turningtech.turningtool.dao.TurningToolDao" />
	</bean>

    <bean id="com.turningtech.turningtool.logic.DeviceIdMappingComparator"
        class="com.turningtech.turningtool.logic.DeviceIdMappingComparatorImpl" />

    <bean id="com.turningtech.turningtool.logic.AESEncryptionManager"
        class="com.turningtech.turningtool.logic.AESEncryptionManagerImpl">
        <property name="keyFile" value="/turningtool.dev.key"/>
    </bean>

</beans>
